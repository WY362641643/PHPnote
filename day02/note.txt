<?php
//  标量类型

   // 字符串类型
    //string;
    // 整数类型
    //integer, int;
    //浮点类型
    //double,float
    // 布尔类型
    boolean;
    bool;
    array(); // 数组类型
    null; // 空类型

// 类型判断
    gettype('变量');  // 获得一个变量的类型名称,结果就是类型名称的字符串
    $v1 = 10;
    $r1 = gettype($v1);  // 结果为: 'integer'
    $v2 = 'abc';
    $r2 = gettype($v2);  // 结果为: 'string'
    $v3 = 1.23;
    $r3 = gettype($v3);  // 结果为: 'double'

// 设置变量类型
    settype('变量名',目标类型);  // 设置一个变量的类型, 相当于改变了变量的类型
    $v1 = 10;
    settype($v1,'string'); // 此时, $v1字符串类型, 即其中的数据变成: "10"

// 判断是否为某种类型
    is_int();is_integer(); // 判断是否为整数类型
    is_float(); // 判断是否为浮点数类型
    is_string();
    is_array();
    is_numeric(); // 判断是否为'数字'类型,(含 整数, 小数,以及'纯数字字符串')
    is_object(); //

    isset(); // 判断变量是否存在
    empty(); // 判断变量是否为空, '0, 0.0, "", "0", false, array() '




运算符  %
    对整数进行"取余操作" -- 如果不是整数,会先自动转换为整数之后再进行取余,转化为整数的做法是:直接去掉小数部分
    比如:
        $v1 = 10 % 4;  // 2
        $v2 = 10.8 % 3.6 // 1

自赋值运算
    += -= *= /= %=

针对数字, 只有两个 ++, --
    $变量++;   // 对该变量中的数据 +1
    ++$变量;   // 对该变量中的数据 +1
    $变量--;   // 对该变量中的数据 -1
    --$变量;   // 对该变量中的数据 -1
    注:
       前自加,先自加,后取值;
       后自加,先取值,后自加;


比较运算符:
    > >= < <= == != === !==
    全等于(===):
        只有两个数据的数据类型一样, 并且其值也一样的时候, 才是全等.
        1 === '1';   // false
        0 === false; //false

逻辑运算符
    只针对布尔值进行运算
    与:  &&
    或:  ||
    非:  !

?>